/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as AuthNotificationsImport } from './routes/_auth.notifications'
import { Route as AuthTimeTableIndexImport } from './routes/_auth/time-table/index'
import { Route as AuthAttendanceIndexImport } from './routes/_auth/attendance/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationsRoute = AuthNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTimeTableIndexRoute = AuthTimeTableIndexImport.update({
  path: '/time-table/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAttendanceIndexRoute = AuthAttendanceIndexImport.update({
  path: '/attendance/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/notifications': {
      id: '/_auth/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthNotificationsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/attendance/': {
      id: '/_auth/attendance/'
      path: '/attendance'
      fullPath: '/attendance'
      preLoaderRoute: typeof AuthAttendanceIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/time-table/': {
      id: '/_auth/time-table/'
      path: '/time-table'
      fullPath: '/time-table'
      preLoaderRoute: typeof AuthTimeTableIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthNotificationsRoute: typeof AuthNotificationsRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthAttendanceIndexRoute: typeof AuthAttendanceIndexRoute
  AuthTimeTableIndexRoute: typeof AuthTimeTableIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthNotificationsRoute: AuthNotificationsRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthAttendanceIndexRoute: AuthAttendanceIndexRoute,
  AuthTimeTableIndexRoute: AuthTimeTableIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/notifications': typeof AuthNotificationsRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
  '/attendance': typeof AuthAttendanceIndexRoute
  '/time-table': typeof AuthTimeTableIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/notifications': typeof AuthNotificationsRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
  '/attendance': typeof AuthAttendanceIndexRoute
  '/time-table': typeof AuthTimeTableIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/notifications': typeof AuthNotificationsRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/attendance/': typeof AuthAttendanceIndexRoute
  '/_auth/time-table/': typeof AuthTimeTableIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/notifications'
    | '/profile'
    | '/'
    | '/attendance'
    | '/time-table'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/notifications'
    | '/profile'
    | '/'
    | '/attendance'
    | '/time-table'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/notifications'
    | '/_auth/profile'
    | '/_auth/'
    | '/_auth/attendance/'
    | '/_auth/time-table/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/notifications",
        "/_auth/profile",
        "/_auth/",
        "/_auth/attendance/",
        "/_auth/time-table/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/notifications": {
      "filePath": "_auth.notifications.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/attendance/": {
      "filePath": "_auth/attendance/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/time-table/": {
      "filePath": "_auth/time-table/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
